{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","navCtrl","formBuilder","afAuth","loadingController","errorMessage","validation_messages","type","message","validations_form","group","email","compose","required","pattern","password","minLength","value","create","then","a","present","loginSaveUser","res","dismiss","navigateForward","err","Promise","resolve","reject","signInWithEmailAndPassword","selector","template"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"loginUser(validations_form.value)\\\">\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Email</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\n          <ion-text color=\\\"danger\\\"><small>{{ validation.message }}</small></ion-text>\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-controll\\\" required></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\n          <ion-text color=\\\"danger\\\"><small>{{ validation.message }}</small></ion-text>\\n        </div>\\n      </ng-container>\\n    </div>\\n    \\n    <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">Log In</ion-button>\\n    <div class=\\\"error-message ion-text-center\\\"><ion-text class=\\\"text-center\\\" color=\\\"danger\\\"><small>{{errorMessage}}</small></ion-text></div>\\n  </form>\\n  <p class=\\\"go-to-register text-center\\\">\\n    No account yet? <a (click)=\\\"goToRegisterPage()\\\">Create an account.</a>\\n  </p>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".text-center {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXh0LWNlbnRlciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NavController, LoadingController } from '@ionic/angular';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  validations_form: FormGroup;\n  errorMessage: string = '';\n\n  constructor(\n    private navCtrl: NavController,\n    private formBuilder: FormBuilder,\n    private afAuth: AngularFireAuth,\n    public loadingController: LoadingController,\n  ) { }\n\n  ngOnInit() {\n    this.validations_form = this.formBuilder.group({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ])),\n    });\n  }\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Please enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n    ]\n  };\n\n  async loginUser(value) {\n    this.errorMessage = \"\";\n    return await this.loadingController.create({\n      message: 'Please wait...',\n    }).then(a => {\n      a.present().then(() => {\n        this.loginSaveUser(value)\n          .then(res => {\n            a.dismiss();\n            this.errorMessage = \"\";\n            this.navCtrl.navigateForward('/dashboard');\n          }, err => {\n            a.dismiss();\n            this.errorMessage = err.message;\n          })\n      });\n    });\n  }\n\n  goToRegisterPage() {\n    this.navCtrl.navigateForward('/register');\n  }\n\n  loginSaveUser(value) {\n    return new Promise<any>((resolve, reject) => {\n      this.afAuth.signInWithEmailAndPassword(value.email, value.password)\n        .then(\n          res => resolve(res),\n          err => reject(err))\n    })\n  }\n\n}"]}