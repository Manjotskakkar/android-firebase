{"version":3,"sources":["./src/app/register/register.page.html","./src/app/register/register-routing.module.ts","./src/app/register/register.module.ts","./src/app/register/register.page.scss","./src/app/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"tryRegister(validations_form.value)\\\">\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Name</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"name\\\" formControlName=\\\"name\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.name\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"validations_form.get('name').hasError(validation.type) && (validations_form.get('name').dirty || validations_form.get('name').touched)\\\">\\n          <ion-text color=\\\"danger\\\"><small>{{ validation.message }}</small></ion-text>\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Email</ion-label>\\n      <ion-input type=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\n          <ion-text color=\\\"danger\\\"><small>{{ validation.message }}</small></ion-text>\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-controll\\\" required></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\n          <ion-text color=\\\"danger\\\"><small>{{ validation.message }}</small></ion-text>\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">City</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"city\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.city\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"validations_form.get('city').hasError(validation.type) && (validations_form.get('city').dirty || validations_form.get('city').touched)\\\">\\n          <ion-text color=\\\"danger\\\"><small>{{ validation.message }}</small></ion-text>\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">State</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"state\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.state\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"validations_form.get('state').hasError(validation.type) && (validations_form.get('state').dirty || validations_form.get('state').touched)\\\">\\n          <ion-text color=\\\"danger\\\"><small>{{ validation.message }}</small></ion-text>\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Country</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"country\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.country\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"validations_form.get('country').hasError(validation.type) && (validations_form.get('country').dirty || validations_form.get('country').touched)\\\">\\n          <ion-text color=\\\"danger\\\"><small>{{ validation.message }}</small></ion-text>\\n        </div>\\n      </ng-container>\\n    </div>\\n    \\n    <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">Register</ion-button>\\n    <label class=\\\"success-message\\\">{{successMessage}}</label>\\n    <div class=\\\"error-message ion-text-center\\\"><ion-text color=\\\"danger\\\"><small>{{errorMessage}}</small></ion-text></div>\\n  </form>\\n  <p class=\\\"go-to-login text-center\\\">Already have an account? <a (click)=\\\"goLoginPage()\\\">Login Now.</a></p>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".text-center {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXh0LWNlbnRlciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NavController, LoadingController, AlertController } from '@ionic/angular';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n\n  validations_form: FormGroup;\n  errorMessage: string = '';\n  successMessage: string = '';\n\n  validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required.' },\n    ],\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n    ],\n    'city': [\n      { type: 'required', message: 'City is required.' }\n    ],\n    'state': [\n      { type: 'required', message: 'State is required.' }\n    ],\n    'country': [\n      { type: 'required', message: 'Country is required.' },\n    ]\n  };\n\n  constructor(\n    private navCtrl: NavController,\n    public loadingController: LoadingController,\n    private db: AngularFirestore,\n    private afAuth: AngularFireAuth,\n    private formBuilder: FormBuilder,\n    public alertController: AlertController,\n    private http : HttpClient\n  ) {\n    this.http.get(\"http://127.0.0.1:3000/details/9\").subscribe((data:any) => {\n      alert(data.id);\n      console.log(data);\n    });  \n  }\n\n  ngOnInit() {\n    this.validations_form = this.formBuilder.group({\n      name: new FormControl('', Validators.compose([\n        Validators.minLength(2),\n        Validators.required\n      ])),\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ])),\n      city: new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      state: new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      country: new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n    });\n  }\n\n  async tryRegister(value) {\n    return await this.loadingController.create({\n      message: 'Please wait...',\n    }).then(a => {\n      a.present().then(() => {\n        this.registerUser(value)\n        .then(res => {\n          a.dismiss();\n          this.errorMessage = \"\";\n          //this.successMessage = \"Your account has been created. Please log in.\";\n          this.alertMsg();\n        }, err => {\n          a.dismiss();\n          this.errorMessage = err.message;\n          this.successMessage = \"\";\n        })\n      });\n    });\n  }\n\n  async alertMsg() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Success!',\n      message: \"Your account has been created. Please log in.\",\n      buttons: [ {\n          text: 'Login Now',\n          handler: () => {\n            this.goLoginPage();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  goLoginPage() {\n    this.navCtrl.navigateBack('');\n  }\n\n  registerUser(value) {\n    return new Promise<any>((resolve, reject) => {\n      this.afAuth.createUserWithEmailAndPassword(value.email, value.password)\n        .then((res) => {\n          this.db.collection('users').doc(res.user.uid).set({\n            name : value.name,\n            city : value.city,\n            state : value.state,\n            country : value.country,\n            role : 'customer'\n          }).then(res => {\n            resolve(res)\n          }, err => reject(err));\n        },\n        err => reject(err))\n    })\n  }\n\n\n}"],"sourceRoot":"webpack:///"}